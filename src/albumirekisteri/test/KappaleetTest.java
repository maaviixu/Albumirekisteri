package albumirekisteri.test;
// Generated by ComTest BEGIN
import java.io.File;
import albumirekisteri.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.30 13:41:04 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KappaleetTest {



  // Generated by ComTest BEGIN
  /** 
   * testPoista117 
   * @throws SailoException when error
   */
  @Test
  public void testPoista117() throws SailoException {    // Kappaleet: 117
    Kappaleet kappaleet = new Kappaleet(); 
    Kappale kap1 = new Kappale(); 
    kap1.vastaaMaailmanParasLaulu(1); 
    Kappale kap2 = new Kappale(); 
    kap2.vastaaMaailmanParasLaulu(2); 
    Kappale kap3 = new Kappale(); 
    kap3.vastaaMaailmanParasLaulu(3); 
    kappaleet.lisaa(kap1); 
    kappaleet.lisaa(kap2); 
    assertEquals("From: Kappaleet line: 129", false, kappaleet.poista(kap3)); 
    assertEquals("From: Kappaleet line: 130", true, kappaleet.poista(kap2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaAlbuminKappaleet144 */
  @Test
  public void testPoistaAlbuminKappaleet144() {    // Kappaleet: 144
    Kappaleet kappaleet = new Kappaleet(); 
    Kappale kap1 = new Kappale(); 
    kap1.vastaaMaailmanParasLaulu(1); 
    Kappale kap2 = new Kappale(); 
    kap2.vastaaMaailmanParasLaulu(2); 
    Kappale kap11 = new Kappale(); 
    kap11.vastaaMaailmanParasLaulu(1); 
    kappaleet.lisaa(kap1); 
    kappaleet.lisaa(kap2); 
    kappaleet.lisaa(kap11); 
    assertEquals("From: Kappaleet line: 155", 2, kappaleet.poistaAlbuminKappaleet(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator223 */
  @Test
  public void testIterator223() {    // Kappaleet: 223
    Kappaleet kappaleet = new Kappaleet(); 
    Kappale kap1 = new Kappale(); 
    kap1.vastaaMaailmanParasLaulu(1); 
    Kappale kap2 = new Kappale(); 
    kap2.vastaaMaailmanParasLaulu(2); 
    Kappale kap11 = new Kappale(); 
    kap11.vastaaMaailmanParasLaulu(1); 
    kappaleet.lisaa(kap1); 
    kappaleet.lisaa(kap2); 
    kappaleet.lisaa(kap11); 
    Iterator<Kappale> i2=kappaleet.iterator(); 
    assertEquals("From: Kappaleet line: 237", kap1, i2.next()); 
    assertEquals("From: Kappaleet line: 238", kap2, i2.next()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKappaleet254 */
  @Test
  public void testAnnaKappaleet254() {    // Kappaleet: 254
    Kappaleet kappaleet = new Kappaleet(); 
    Kappale kap1 = new Kappale(); 
    kap1.vastaaMaailmanParasLaulu(1); 
    Kappale kap2 = new Kappale(); 
    kap2.vastaaMaailmanParasLaulu(2); 
    Kappale kap11 = new Kappale(); 
    kap11.vastaaMaailmanParasLaulu(1); 
    kappaleet.lisaa(kap1); 
    kappaleet.lisaa(kap2); 
    kappaleet.lisaa(kap11); 
    List<Kappale> loytyneet; 
    loytyneet = kappaleet.annaKappaleet(3); 
    assertEquals("From: Kappaleet line: 268", 0, loytyneet.size()); 
    loytyneet = kappaleet.annaKappaleet(1); 
    assertEquals("From: Kappaleet line: 270", 2, loytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testKokonaiskesto285 */
  @Test
  public void testKokonaiskesto285() {    // Kappaleet: 285
    Kappaleet kappaleet = new Kappaleet(); 
    Kappale kap1 = new Kappale(); 
    Kappale kap2 = new Kappale(); 
    Kappale kap3 = new Kappale(); 
    kap1.parse(" 1 | 6 | Jytää | 3.44 "); 
    kap2.parse(" 2 | 7 | Jytää | 3.44 "); 
    kap3.parse(" 3 | 6 | Jytää | 3.44 "); 
    kappaleet.lisaa(kap1); 
    kappaleet.lisaa(kap2); 
    kappaleet.lisaa(kap3); 
    assertEquals("From: Kappaleet line: 296", 7.28, kappaleet.kokonaiskesto(6), 0.000001); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa328 
   * @throws SailoException when error
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa328() throws SailoException,CloneNotSupportedException {    // Kappaleet: 328
    Kappaleet kappaleet = new Kappaleet(); 
    Kappale kap1 = new Kappale(), kap2 = new Kappale(), kap3 = new Kappale(); 
    kap1.rekisteroi(); 
    kap2.rekisteroi(); 
    kap3.rekisteroi(); 
    assertEquals("From: Kappaleet line: 336", 0, kappaleet.getLkm()); 
    kappaleet.korvaaTaiLisaa(kap1); 
    assertEquals("From: Kappaleet line: 338", 1, kappaleet.getLkm()); 
    kappaleet.korvaaTaiLisaa(kap2); 
    assertEquals("From: Kappaleet line: 340", 2, kappaleet.getLkm()); 
  } // Generated by ComTest END
}